A car‐rental agency manages a fleet of vehicles and handles customer reservations. Each Vehicle is an abstract class (with attributes licensePlate and manufacturer and an abstract method calculateRentalFee(days: int): double) with concrete subclasses Car and Truck (the latter adding, for example, cargoCapacity). The agency’s Fleet aggregates the Vehicles it currently owns. A Customer may make multiple Reservations, each of which associates one Customer with exactly one Vehicle over a given start and end date. Every Reservation composes a Payment (with attributes amount: double and paymentDate: Date) that is created when the reservation is made and destroyed if the reservation is canceled. Draw a UML class diagram capturing these inheritance, association, aggregation, and composition relationships.